import{_ as t,D as e,c as l,j as i,a as s,I as n,a2 as h,o as p}from"./chunks/framework.C6Z_8Ss2.js";const m=JSON.parse('{"title":"个人常用 SQL 函数","description":"","frontmatter":{"title":"个人常用 SQL 函数","author":"查尔斯","date":"2022/02/16 15:43","isTop":true,"categories":["杂碎逆袭史"],"tags":["SQL","SQL函数"]},"headers":[],"relativePath":"docs/categories/fragments/2022/02/16/个人常用SQL函数.md","filePath":"docs/categories/fragments/2022/02/16/个人常用SQL函数.md"}'),k={name:"docs/categories/fragments/2022/02/16/个人常用SQL函数.md"},d={id:"个人常用-sql-函数",tabindex:"-1"},r=i("a",{class:"header-anchor",href:"#个人常用-sql-函数","aria-label":'Permalink to "个人常用 SQL 函数 <Badge text="持续更新" type="warning" />"'},"​",-1),o=h(`<h2 id="时间函数" tabindex="-1">时间函数 <a class="header-anchor" href="#时间函数" aria-label="Permalink to &quot;时间函数&quot;">​</a></h2><h3 id="获取当前时间-mysql" tabindex="-1">获取当前时间（MySQL） <a class="header-anchor" href="#获取当前时间-mysql" aria-label="Permalink to &quot;获取当前时间（MySQL）&quot;">​</a></h3><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"># 输出格式为：yyyy</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">MM</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">dd HH:mm:ss</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">NOW</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span></code></pre></div><h3 id="获取当前时间秒-mysql" tabindex="-1">获取当前时间秒（MySQL） <a class="header-anchor" href="#获取当前时间秒-mysql" aria-label="Permalink to &quot;获取当前时间秒（MySQL）&quot;">​</a></h3><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"># 从 1970年1月1日 开始到现在的秒数</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">UNIX_TIMESTAMP();</span></span></code></pre></div><h3 id="计算两个时间之间的间隔-mysql" tabindex="-1">计算两个时间之间的间隔（MySQL） <a class="header-anchor" href="#计算两个时间之间的间隔-mysql" aria-label="Permalink to &quot;计算两个时间之间的间隔（MySQL）&quot;">​</a></h3><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"># unit 可选为FRAC_SECOND 毫秒、</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">SECOND</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 秒、</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">MINUTE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 分钟、</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">HOUR</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 小时、</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">DAY</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 天、</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">WEEK</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 星期、</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">MONTH</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 月、</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">QUARTER</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 季度、</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">YEAR</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 年</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">TIMESTAMPDIFF(unit, datetime_expr1, datetime_expr2)</span></span></code></pre></div><h2 id="字符串函数" tabindex="-1">字符串函数 <a class="header-anchor" href="#字符串函数" aria-label="Permalink to &quot;字符串函数&quot;">​</a></h2><h3 id="拼接字符串-mysql" tabindex="-1">拼接字符串（MySQL） <a class="header-anchor" href="#拼接字符串-mysql" aria-label="Permalink to &quot;拼接字符串（MySQL）&quot;">​</a></h3><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"># 将多个字符串拼接在一起</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">CONCAT</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(str1, str2, ...)</span></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">笔者说</p><p>这个函数看起来平平无奇，但实际用起来，可不只是真香。你可能会在 MyBatis 中解决 SQL 注入的时候用到它，还可能在一些 “奇怪” 的场景用到它。</p></div><h4 id="清空数据库中的所有表数据" tabindex="-1">清空数据库中的所有表数据 <a class="header-anchor" href="#清空数据库中的所有表数据" aria-label="Permalink to &quot;清空数据库中的所有表数据&quot;">​</a></h4><p>清空单表数据很简单。</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">TRUNCATE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> TABLE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 表名;</span></span></code></pre></div><p>但是，如果现在有 100 + 张表？你当然不会一个一个的去 <code>TRUNCATE</code>，但 MySQL 又没有提供该功能。那你可以用用下面的方法。</p><ol><li><p>查询该数据库下的所有表，利用 <code>CONCAT()</code> 函数将 <code>TRUNCATE</code> 语句拼接起来</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">SELECT</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  CONCAT(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">&#39;TRUNCATE TABLE &#39;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> TABLE_NAME,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;;&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">FROM</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  information_schema.TABLES</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">WHERE</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> TABLE_SCHEMA</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;数据库名&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div></li><li><p>将执行结果复制，直接执行即可</p></li></ol><h4 id="删除数据库中的所有表" tabindex="-1">删除数据库中的所有表 <a class="header-anchor" href="#删除数据库中的所有表" aria-label="Permalink to &quot;删除数据库中的所有表&quot;">​</a></h4><p>删除单表很简单。</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">DROP</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> TABLE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 表名;</span></span></code></pre></div><p>但是，如果现在有 100 + 张表？你当然不会一个一个的去 <code>DROP</code>，但 MySQL 又没有提供该功能。那你可以用用下面的方法。</p><ol><li><p>查询该数据库下的所有表，利用 <code>CONCAT()</code> 函数将 <code>DROP</code> 语句拼接起来</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">SELECT</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  CONCAT(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">&#39;DROP TABLE IF EXISTS &#39;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> TABLE_NAME,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;;&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">FROM</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  information_schema.TABLES</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">WHERE</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> TABLE_SCHEMA</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;数据库名&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div></li><li><p>将执行结果复制，直接执行即可</p></li></ol>`,21);function c(E,g,y,F,u,C){const a=e("Badge");return p(),l("div",null,[i("h1",d,[s("个人常用 SQL 函数 "),n(a,{text:"持续更新",type:"warning"}),s(),r]),o])}const A=t(k,[["render",c]]);export{m as __pageData,A as default};
